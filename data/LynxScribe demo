{
  "env": "LynxScribe",
  "nodes": [
    {
      "id": "Input chat 1",
      "type": "basic",
      "data": {
        "title": "Input chat",
        "params": {
          "chat": "who is the CIO of Lynx?"
        },
        "display": null,
        "error": null,
        "meta": {
          "params": {
            "chat": {
              "name": "chat",
              "default": null,
              "type": {
                "type": "<class 'str'>"
              }
            }
          },
          "inputs": {},
          "type": "basic",
          "outputs": {
            "output": {
              "name": "output",
              "position": "right",
              "type": {
                "type": "None"
              }
            }
          },
          "name": "Input chat"
        },
        "__execution_delay": 0.0,
        "collapsed": null
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "View 1",
      "type": "table_view",
      "data": {
        "title": "View",
        "params": {},
        "display": {
          "dataframes": {
            "df": {
              "columns": [
                "answer",
                "sources",
                "confidence_score",
                "confidence_score_description",
                "meta_outputs"
              ],
              "data": [
                [
                  "The Chief Innovation Officer (CIO) of Lynx Analytics is Gabor Benedek. He is responsible for defining the methodological roadmap for Lynx's predictive analytics consulting and product development departments. If you need more information about Gabor or his role, feel free to ask!\n\nPlease visit https://www.lynxanalytics.com/team-leadership for further information.",
                  [
                    {
                      "id": "i_541",
                      "body": "Lynx Analytics is a big data company founded in 2010 by Gyorgy Lajtai and a team from INSEAD. The company aims to solve real-world problems using big data graphs. The team is composed of individuals with diverse backgrounds and experiences spanning various industries. The company has a Chief Innovation Officer, a COO, a CTO, a Senior Board Advisor, a Finance Director, and a Director of People. They are responsible for defining the methodological roadmap, implementing solutions, managing finances, and leading HR services and talent management as the company expands globally.\n\n Part of the article: \n\nAs Lynx Analytics CFO between 2016 and 2021, Dan managed the companys capital raising initiatives and set up its financial management functions and team from the ground up.\n\nHe remains involved with the company as a shareholder and in an advisory capacity.\n\nLi Lee, Finance Director\nLi oversees the whole finance spectrum at Lynx Analytics.\n\nThe dynamic environment, exposure to investors, and continuous innovation requirements are aspects of the job she particularly enjoys.\n\nLi likes to find solutions to new business needs and to implement automated internal controls & procedures to support the companys growth.\n\nLi is a financial professional with more than 15 years of experience in financial accounting & reporting and finance-related matters.\nBefore joining Lynx, she held different Finance positions at accounting & audit firms as well as MNCs in various sectors.\n\nEdina Choo, Director of People\nAs the Director of People at Lynx, Edina provides strategic leadership and management across the various HR services provided to our global talent.\n\nShe is responsible for building a proactive human resources team that drives recruitment, engagement, talent management, people and leadership development and shaping the people culture within Lynx as we expand into USA, Europe and various parts of Asia.\n\nEdina is passionate about harnessing and maximising the potential of each individual that joins our team!",
                      "confidence_score": 0.9249657988548279,
                      "title": null,
                      "description": null,
                      "type": "information"
                    },
                    {
                      "id": "i_151",
                      "body": "Lynx Analytics is a company founded by a team from INSEAD in 2010, with a focus on solving real-world problems using big data graphs. The company's CEO and co-founder, Gyorgy Lajtai, has experience in CRM challenges and marketing automation. The company's Chief Innovation Officer and co-founder, Gabor Benedek, is responsible for defining the methodological roadmap of Lynx's predictive analytics consulting and product development departments. The team also includes Miklos Sarvary, Chung Ng, Cintia O. Tavella Gomez, Paul Berriman, and Zsolt Katona, who all have extensive experience in various industries and academia.\n\n Part of the article: \n\nCintia has lived and worked in Asia for 15 years, is originally from Buenos Aires (Argentina), grew up in Spain and currently lives in Seattle.\n\nIn her free time, she loves to learn languages, train for the next triathlon, practice yoga and\n\nmeditation.\n\nPaul Berriman\n\nNon Executive Director at Spark New Zealand, Non Executive Director at Rain Networks, South Africa\n\nUntil January 2021 Paul was Group Chief Technology Officer of the HKT Trust, where he was responsible for leading the groups product and technology roadmap and strategic development,including cross industry propositions, and embedding analytics into everything HKT does.\nPrior to this he was Managing Director of management consultancy Arthur D. Little in Hong Kong and he has held roles in Reuters and several major Hong Kong service providers.\n\nIn 2008 he was listed as one of the Global Telecoms Business Magazinestop100 most influential persons in telecoms.\n\nHe is Chairman of a Global TD-LTE Initiative (GTI) Working Group, a board member of the Next Generation Mobile Networks Alliance (NGMN Ltd.) and an independent non-executive director of Spark New Zealand (f.k.a.\n\nTelecom Corporation of New Zealand) having joined the Board in December 2011.\n\nHe is also a non-executive director of mobile operator, Rain Ltd., in South Africa.\n\nHe was also a member of OFTAs Telecommunications Standards Advisory Committee for many years.",
                      "confidence_score": 0.9231036603450775,
                      "title": null,
                      "description": null,
                      "type": "information"
                    },
                    {
                      "id": "s_546",
                      "body": "Lynx Analytics is a big data company co-founded by Gyorgy Lajtai and a team from INSEAD. Miklos Sarvary, a Professor at Columbia Business School, and Chung Ng, a SVP at Group CTO Office of the HKT Trust, are among the company's new executives. Meanwhile, Cintia O. Tavella Gomez is the Senior Director of Strategic Partnerships at Expedia Group, and Paul Berriman was the Group Chief Technology Officer of the HKT Trust until January 2021. Additionally, Zsolt Katona is the faculty director of the Fisher Center for Business Analytics at the Haas School.",
                      "confidence_score": 0.9230074882507324,
                      "title": null,
                      "description": null,
                      "type": "summary"
                    },
                    {
                      "id": "i_182",
                      "body": "Lynx Analytics is a big data graph company founded in 2010 by a team from INSEAD. The company aims to solve real-world problems using big data graphs. The team includes experienced professionals, including co-founders Gyorgy Lajtai and Gabor Benedek, as well as Amit Akhelikar, Chema Lizano, Dan Florea, Adrienne Lee, Li Lee, Edina Choo, Francois de Repentigny, Marton Szel, and Daniel Darabos. The team has expertise in AI startups, telecom, technology strategy, M&A, financial accounting, HR, marketing, data science, and engineering.\n\n Part of the article: \n\nAs Lynx Analytics CFO between 2016 and 2021, Dan managed the companys capital raising initiatives and set up its financial management functions and team from the ground up.\n\nHe remains involved with the company as a shareholder and in an advisory capacity.\n\nLi Lee\n\nFinance Director\n\nLi oversees the whole finance spectrum at Lynx Analytics.\n\nThe dynamic environment, exposure to investors, and continuous innovation requirements are aspects of the job she particularly enjoys.\n\nLi likes to find solutions to new business needs and to implement automated internal controls & procedures to support the companys growth.\n\nLi is a financial professional with more than 15 years of experience in financial accounting & reporting and finance-related matters.\nBefore joining Lynx, she held different Finance positions at accounting & audit firms as well as MNCs in various sectors.\n\nEdina Choo\n\nDirector of People\n\nAs the Director of People at Lynx, Edina provides strategic leadership and management across the various HR services provided to our global talent.\n\nShe is responsible for building a proactive human resources team that drives recruitment, engagement, talent management, people and leadership development and shaping the people culture within Lynx as we expand into USA, Europe and various parts of Asia.\n\nEdina is passionate about harnessing and maximising the potential of each individual that joins our team!",
                      "confidence_score": 0.9217821955680847,
                      "title": null,
                      "description": null,
                      "type": "information"
                    },
                    {
                      "id": "s_459",
                      "body": "Lynx Analytics is a big data company founded in 2010 by Gyorgy Lajtai and a team from INSEAD. The company aims to solve real-world problems using big data graphs. The team is composed of individuals with diverse backgrounds and experiences spanning various industries. The company has a Chief Innovation Officer, a COO, a CTO, a Senior Board Advisor, a Finance Director, and a Director of People. They are responsible for defining the methodological roadmap, implementing solutions, managing finances, and leading HR services and talent management as the company expands globally.",
                      "confidence_score": 0.9208503663539886,
                      "title": null,
                      "description": null,
                      "type": "summary"
                    }
                  ],
                  0.9249657988548279,
                  "Score is always between 0 and 1, the total is the maximum of individual source scores.",
                  {}
                ]
              ]
            }
          }
        },
        "error": null,
        "meta": {
          "params": {},
          "name": "View",
          "outputs": {},
          "type": "table_view",
          "inputs": {
            "input": {
              "position": "left",
              "name": "input",
              "type": {
                "type": "<class 'inspect._empty'>"
              }
            }
          }
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "LLM 1",
      "type": "basic",
      "data": {
        "title": "LLM",
        "params": {
          "name": "openai"
        },
        "display": null,
        "error": null,
        "meta": {
          "type": "basic",
          "name": "LLM",
          "inputs": {},
          "params": {
            "name": {
              "name": "name",
              "type": {
                "type": "<class 'str'>"
              },
              "default": "openai"
            }
          },
          "outputs": {
            "output": {
              "type": {
                "type": "None"
              },
              "name": "output",
              "position": "top"
            }
          }
        },
        "__execution_delay": 0.0,
        "collapsed": null
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Scenario selector 1",
      "type": "basic",
      "data": {
        "title": "Scenario selector",
        "params": {
          "node_types": "intent_cluster",
          "scenario_file": "/home/darabos/nvme/lynxscribe/examples/chat_api/scenarios.yaml"
        },
        "display": null,
        "error": null,
        "meta": {
          "outputs": {
            "output": {
              "type": {
                "type": "None"
              },
              "name": "output",
              "position": "top"
            }
          },
          "type": "basic",
          "name": "Scenario selector",
          "params": {
            "node_types": {
              "type": {
                "type": "<class 'str'>"
              },
              "default": "intent_cluster",
              "name": "node_types"
            },
            "scenario_file": {
              "name": "scenario_file",
              "default": null,
              "type": {
                "type": "<class 'str'>"
              }
            }
          },
          "inputs": {}
        },
        "collapsed": null,
        "__execution_delay": 0.0
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Chat API 1",
      "type": "basic",
      "data": {
        "title": "Chat API",
        "params": {
          "model": "gpt-4o-mini"
        },
        "display": null,
        "error": null,
        "collapsed": null,
        "meta": {
          "name": "Chat API",
          "params": {
            "model": {
              "default": "gpt-4o-mini",
              "type": {
                "type": "<class 'str'>"
              },
              "name": "model"
            }
          },
          "inputs": {
            "chat_processor": {
              "position": "bottom",
              "name": "chat_processor",
              "type": {
                "type": "<class 'inspect._empty'>"
              }
            },
            "chatbot": {
              "position": "bottom",
              "type": {
                "type": "<class 'inspect._empty'>"
              },
              "name": "chatbot"
            },
            "knowledge_base": {
              "name": "knowledge_base",
              "type": {
                "type": "<class 'inspect._empty'>"
              },
              "position": "bottom"
            }
          },
          "outputs": {
            "output": {
              "name": "output",
              "type": {
                "type": "None"
              },
              "position": "top"
            }
          },
          "type": "basic"
        },
        "__execution_delay": 0.0
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Knowledge base 1",
      "type": "basic",
      "data": {
        "title": "Knowledge base",
        "params": {
          "nodes_path": "/home/darabos/nvme/lynxscribe/examples/chat_api/data/lynx/nodes.pickle",
          "template_cluster_path": "/home/darabos/nvme/lynxscribe/examples/chat_api/data/lynx/tempclusters.pickle",
          "edges_path": "/home/darabos/nvme/lynxscribe/examples/chat_api/data/lynx/edges.pickle"
        },
        "display": null,
        "error": null,
        "meta": {
          "type": "basic",
          "outputs": {
            "output": {
              "position": "top",
              "name": "output",
              "type": {
                "type": "None"
              }
            }
          },
          "name": "Knowledge base",
          "params": {
            "edges_path": {
              "name": "edges_path",
              "default": "edges.pickle",
              "type": {
                "type": "<class 'str'>"
              }
            },
            "nodes_path": {
              "name": "nodes_path",
              "type": {
                "type": "<class 'str'>"
              },
              "default": "nodes.pickle"
            },
            "template_cluster_path": {
              "default": "tempclusters.pickle",
              "type": {
                "type": "<class 'str'>"
              },
              "name": "template_cluster_path"
            }
          },
          "inputs": {}
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "RAG chatbot 1",
      "type": "basic",
      "data": {
        "title": "RAG chatbot",
        "params": {
          "negative_answer": "I'm sorry, but the data I've been trained on does not contain any information related to your question.",
          "strict_limits": true,
          "limits_by_type": "{\"information\": [2, 3], \"summary\": [2, 3]}",
          "max_results": "5"
        },
        "display": null,
        "error": null,
        "meta": {
          "name": "RAG chatbot",
          "outputs": {
            "output": {
              "type": {
                "type": "None"
              },
              "position": "top",
              "name": "output"
            }
          },
          "inputs": {
            "rag_graph": {
              "name": "rag_graph",
              "position": "bottom",
              "type": {
                "type": "<class 'inspect._empty'>"
              }
            },
            "llm": {
              "name": "llm",
              "position": "bottom",
              "type": {
                "type": "<class 'inspect._empty'>"
              }
            },
            "scenario_selector": {
              "type": {
                "type": "<class 'inspect._empty'>"
              },
              "name": "scenario_selector",
              "position": "bottom"
            }
          },
          "params": {
            "limits_by_type": {
              "default": "{}",
              "name": "limits_by_type",
              "type": {
                "type": "<class 'str'>"
              }
            },
            "max_results": {
              "type": {
                "type": "<class 'int'>"
              },
              "name": "max_results",
              "default": 5.0
            },
            "negative_answer": {
              "name": "negative_answer",
              "default": "I'm sorry, but the data I've been trained on does not contain any information related to your question.",
              "type": {
                "type": "<class 'str'>"
              }
            },
            "strict_limits": {
              "default": true,
              "name": "strict_limits",
              "type": {
                "type": "<class 'bool'>"
              }
            }
          },
          "type": "basic"
        },
        "beingResized": false
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "RAG graph 1",
      "type": "basic",
      "data": {
        "title": "RAG graph",
        "params": {},
        "display": null,
        "error": null,
        "collapsed": true,
        "__execution_delay": null,
        "meta": {
          "inputs": {
            "vector_store": {
              "type": {
                "type": "<class 'inspect._empty'>"
              },
              "name": "vector_store",
              "position": "bottom"
            },
            "text_embedder": {
              "name": "text_embedder",
              "position": "bottom",
              "type": {
                "type": "<class 'inspect._empty'>"
              }
            }
          },
          "name": "RAG graph",
          "params": {},
          "outputs": {
            "output": {
              "type": {
                "type": "None"
              },
              "position": "top",
              "name": "output"
            }
          },
          "type": "basic"
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Vector store 1",
      "type": "basic",
      "data": {
        "title": "Vector store",
        "params": {
          "name": "chromadb",
          "collection_name": "lynx"
        },
        "display": null,
        "error": null,
        "beingResized": false,
        "meta": {
          "name": "Vector store",
          "params": {
            "name": {
              "default": "chromadb",
              "name": "name",
              "type": {
                "type": "<class 'str'>"
              }
            },
            "collection_name": {
              "type": {
                "type": "<class 'str'>"
              },
              "default": "lynx",
              "name": "collection_name"
            }
          },
          "inputs": {},
          "type": "basic",
          "outputs": {
            "output": {
              "position": "top",
              "name": "output",
              "type": {
                "type": "None"
              }
            }
          }
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Text embedder 2",
      "type": "basic",
      "data": {
        "title": "Text embedder",
        "params": {
          "model": "text-embedding-ada-002"
        },
        "display": null,
        "error": null,
        "collapsed": null,
        "__execution_delay": 0.0,
        "meta": {
          "inputs": {
            "llm": {
              "position": "bottom",
              "name": "llm",
              "type": {
                "type": "<class 'inspect._empty'>"
              }
            }
          },
          "params": {
            "model": {
              "default": "text-embedding-ada-002",
              "name": "model",
              "type": {
                "type": "<class 'str'>"
              }
            }
          },
          "name": "Text embedder",
          "type": "basic",
          "outputs": {
            "output": {
              "position": "top",
              "name": "output",
              "type": {
                "type": "None"
              }
            }
          }
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "LLM 2",
      "type": "basic",
      "data": {
        "title": "LLM",
        "params": {
          "name": "openai"
        },
        "display": null,
        "error": null,
        "meta": {
          "name": "LLM",
          "inputs": {},
          "params": {
            "name": {
              "type": {
                "type": "<class 'str'>"
              },
              "default": "openai",
              "name": "name"
            }
          },
          "outputs": {
            "output": {
              "position": "top",
              "name": "output",
              "type": {
                "type": "None"
              }
            }
          },
          "type": "basic"
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Truncate history 1",
      "type": "basic",
      "data": {
        "title": "Truncate history",
        "params": {
          "max_tokens": 10000.0
        },
        "display": null,
        "error": null,
        "meta": {
          "inputs": {},
          "outputs": {
            "output": {
              "type": {
                "type": "None"
              },
              "position": "top",
              "name": "output"
            }
          },
          "type": "basic",
          "name": "Truncate history",
          "params": {
            "max_tokens": {
              "type": {
                "type": "<class 'int'>"
              },
              "name": "max_tokens",
              "default": 10000.0
            }
          }
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Chat processor 1",
      "type": "basic",
      "data": {
        "title": "Chat processor",
        "params": {},
        "display": null,
        "error": null,
        "meta": {
          "inputs": {
            "processor": {
              "name": "processor",
              "type": {
                "type": "<class 'inspect._empty'>"
              },
              "position": "bottom"
            }
          },
          "params": {},
          "outputs": {
            "output": {
              "name": "output",
              "type": {
                "type": "None"
              },
              "position": "top"
            }
          },
          "type": "basic",
          "name": "Chat processor"
        },
        "__execution_delay": null,
        "collapsed": true
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Mask 1",
      "type": "basic",
      "data": {
        "title": "Mask",
        "params": {
          "name": "email",
          "mask_pattern": "masked_email_address_{}",
          "regex": "([a-z0-9!#$%&'*+\\/=?^_`{|.}~-]+@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)",
          "exceptions": "info@lynxanalytics.com,marketing@lynxanalytics.com,hr@lynxanalytics.com,lynxkite@lynxkite.com"
        },
        "display": null,
        "error": null,
        "meta": {
          "params": {
            "exceptions": {
              "type": {
                "type": "<class 'str'>"
              },
              "default": "",
              "name": "exceptions"
            },
            "regex": {
              "name": "regex",
              "default": "",
              "type": {
                "type": "<class 'str'>"
              }
            },
            "name": {
              "type": {
                "type": "<class 'str'>"
              },
              "default": "",
              "name": "name"
            },
            "mask_pattern": {
              "name": "mask_pattern",
              "default": "",
              "type": {
                "type": "<class 'str'>"
              }
            }
          },
          "name": "Mask",
          "inputs": {},
          "outputs": {
            "output": {
              "name": "output",
              "position": "top",
              "type": {
                "type": "None"
              }
            }
          },
          "type": "basic"
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Mask 2",
      "type": "basic",
      "data": {
        "title": "Mask",
        "params": {
          "regex": "((?:(?:\\\\d{4}[- ]?){3}\\\\d{4}|\\\\d{15,16}))(?![\\\\d])",
          "mask_pattern": "masked_credit_card_number_{}",
          "exceptions": "",
          "name": "credit_card"
        },
        "display": null,
        "error": null,
        "meta": {
          "type": "basic",
          "outputs": {
            "output": {
              "position": "top",
              "type": {
                "type": "None"
              },
              "name": "output"
            }
          },
          "name": "Mask",
          "params": {
            "mask_pattern": {
              "default": "",
              "type": {
                "type": "<class 'str'>"
              },
              "name": "mask_pattern"
            },
            "exceptions": {
              "default": "",
              "type": {
                "type": "<class 'str'>"
              },
              "name": "exceptions"
            },
            "name": {
              "default": "",
              "name": "name",
              "type": {
                "type": "<class 'str'>"
              }
            },
            "regex": {
              "type": {
                "type": "<class 'str'>"
              },
              "name": "regex",
              "default": ""
            }
          },
          "inputs": {}
        }
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    },
    {
      "id": "Test Chat API 2",
      "type": "basic",
      "data": {
        "title": "Test Chat API",
        "params": {
          "show_details": true
        },
        "display": null,
        "error": null,
        "collapsed": false,
        "meta": {
          "outputs": {
            "output": {
              "type": {
                "type": "None"
              },
              "name": "output",
              "position": "right"
            }
          },
          "params": {
            "show_details": {
              "default": false,
              "name": "show_details",
              "type": {
                "type": "<class 'bool'>"
              }
            }
          },
          "type": "basic",
          "inputs": {
            "message": {
              "position": "left",
              "type": {
                "type": "<class 'inspect._empty'>"
              },
              "name": "message"
            },
            "chat_api": {
              "name": "chat_api",
              "position": "bottom",
              "type": {
                "type": "<class 'inspect._empty'>"
              }
            }
          },
          "name": "Test Chat API"
        },
        "__execution_delay": 0.0
      },
      "position": {
        "x": 0.0,
        "y": 0.0
      }
    }
  ],
  "edges": [
    {
      "id": "xy-edge__Knowledge base 1output-Chat API 1knowledge_base",
      "source": "Knowledge base 1",
      "target": "Chat API 1",
      "sourceHandle": "output",
      "targetHandle": "knowledge_base"
    },
    {
      "id": "xy-edge__RAG chatbot 1output-Chat API 1chatbot",
      "source": "RAG chatbot 1",
      "target": "Chat API 1",
      "sourceHandle": "output",
      "targetHandle": "chatbot"
    },
    {
      "id": "xy-edge__LLM 1output-RAG chatbot 1llm",
      "source": "LLM 1",
      "target": "RAG chatbot 1",
      "sourceHandle": "output",
      "targetHandle": "llm"
    },
    {
      "id": "xy-edge__Scenario selector 1output-RAG chatbot 1scenario_selector",
      "source": "Scenario selector 1",
      "target": "RAG chatbot 1",
      "sourceHandle": "output",
      "targetHandle": "scenario_selector"
    },
    {
      "id": "xy-edge__RAG graph 1output-RAG chatbot 1rag_graph",
      "source": "RAG graph 1",
      "target": "RAG chatbot 1",
      "sourceHandle": "output",
      "targetHandle": "rag_graph"
    },
    {
      "id": "xy-edge__Vector store 1output-RAG graph 1vector_store",
      "source": "Vector store 1",
      "target": "RAG graph 1",
      "sourceHandle": "output",
      "targetHandle": "vector_store"
    },
    {
      "id": "xy-edge__Text embedder 2output-RAG graph 1text_embedder",
      "source": "Text embedder 2",
      "target": "RAG graph 1",
      "sourceHandle": "output",
      "targetHandle": "text_embedder"
    },
    {
      "id": "xy-edge__LLM 2output-Text embedder 2llm",
      "source": "LLM 2",
      "target": "Text embedder 2",
      "sourceHandle": "output",
      "targetHandle": "llm"
    },
    {
      "id": "xy-edge__Truncate history 1output-Chat processor 1processor",
      "source": "Truncate history 1",
      "target": "Chat processor 1",
      "sourceHandle": "output",
      "targetHandle": "processor"
    },
    {
      "id": "xy-edge__Chat processor 1output-Chat API 1chat_processor",
      "source": "Chat processor 1",
      "target": "Chat API 1",
      "sourceHandle": "output",
      "targetHandle": "chat_processor"
    },
    {
      "id": "xy-edge__Mask 1output-Chat processor 1processor",
      "source": "Mask 1",
      "target": "Chat processor 1",
      "sourceHandle": "output",
      "targetHandle": "processor"
    },
    {
      "id": "xy-edge__Mask 2output-Chat processor 1processor",
      "source": "Mask 2",
      "target": "Chat processor 1",
      "sourceHandle": "output",
      "targetHandle": "processor"
    },
    {
      "id": "xy-edge__Input chat 1output-Test Chat API 2message",
      "source": "Input chat 1",
      "target": "Test Chat API 2",
      "sourceHandle": "output",
      "targetHandle": "message"
    },
    {
      "id": "xy-edge__Test Chat API 2output-View 1input",
      "source": "Test Chat API 2",
      "target": "View 1",
      "sourceHandle": "output",
      "targetHandle": "input"
    },
    {
      "id": "xy-edge__Chat API 1output-Test Chat API 2chat_api",
      "source": "Chat API 1",
      "target": "Test Chat API 2",
      "sourceHandle": "output",
      "targetHandle": "chat_api"
    }
  ]
}